{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/apple/Desktop/projects/reactnative/sports/NewsBuzz/src/screens/components/Event/AllEvents.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Constants from 'expo-constants';\nimport * as Location from 'expo-location';\nimport * as Permissions from 'expo-permissions';\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport TravelGuide from \"../Guide/TravelGuide\";\n\nvar Latest = function (_React$Component) {\n  _inherits(Latest, _React$Component);\n\n  var _super = _createSuper(Latest);\n\n  function Latest() {\n    var _this;\n\n    _classCallCheck(this, Latest);\n\n    _this = _super.call(this);\n\n    _this._getLocationAsync = function _callee() {\n      var _await$Permissions$as, status, location, _location$coords, latitude, longitude;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              if (status !== \"granted\") {\n                _this.setState({\n                  errorMessage: \"Permission to access location was denied\"\n                });\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 7:\n              location = _context.sent;\n\n              _this.setState({\n                location: location\n              });\n\n              _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n\n              _this.getGeocodeAsync({\n                latitude: latitude,\n                longitude: longitude\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getGeocodeAsync = function _callee2(location) {\n      var address;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync(location));\n\n            case 2:\n              address = _context2.sent;\n              address = JSON.stringify(address[0].city);\n\n              _this.setState({\n                address: address\n              });\n\n              console.log(\"=========\");\n              console.log(_this.state.address);\n              console.log(\"=========\");\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._onRefresh = function () {\n      _this.setState({\n        refreshing: true\n      });\n\n      _this.getData();\n    };\n\n    _this.request_call_location = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(Platform.OS === \"android\" && !Constants.isDevice)) {\n                _context3.next = 4;\n                break;\n              }\n\n              _this.setState({\n                errorMessage: \"Oops, this will not work on Sketch in an Android emulator. Try it on your device!\"\n              });\n\n              _context3.next = 6;\n              break;\n\n            case 4:\n              _context3.next = 6;\n              return _regeneratorRuntime.awrap(_this._getLocationAsync());\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getData = function _callee4() {\n      var response, data;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://newsbuzz-server.herokuapp.com/api/display/registerEvent\", {\n                method: \"post\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  current: _this.state.address\n                })\n              }));\n\n            case 2:\n              response = _context4.sent;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              data = _context4.sent;\n\n              _this.setState({\n                data: data,\n                refreshing: false\n              });\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      data: [],\n      refreshing: false,\n      location: null,\n      address: null\n    };\n    return _this;\n  }\n\n  _createClass(Latest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.request_call_location();\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var address = \"\";\n      var text = \"Waiting..\";\n\n      if (this.state.errorMessage) {\n        text = this.state.errorMessage;\n      } else if (this.state.location) {\n        text = JSON.stringify(this.state.location);\n        address = this.state.address;\n        console.log(address);\n      }\n\n      return React.createElement(ScrollView, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.refreshing,\n          onRefresh: this._onRefresh,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.data,\n        keyExtractor: function keyExtractor(item) {\n          return item._id;\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TravelGuide, {\n            placeUri: {\n              uri: \"https://images.pexels.com/photos/3422053/pexels-photo-3422053.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\"\n            },\n            placeName: item.Event_name,\n            placeDes: item.description,\n            date: item.Event_date,\n            time: item.Event_time,\n            location: item.location,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }\n          });\n        },\n        ItemSeparatorComponent: this.renderSeparator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Latest;\n}(React.Component);\n\nexport { Latest as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44\n  }\n});","map":{"version":3,"sources":["/Users/apple/Desktop/projects/reactnative/sports/NewsBuzz/src/screens/components/Event/AllEvents.js"],"names":["Constants","Location","Permissions","React","Component","ScrollView","TravelGuide","Latest","_getLocationAsync","askAsync","LOCATION","status","setState","errorMessage","getCurrentPositionAsync","location","coords","latitude","longitude","getGeocodeAsync","reverseGeocodeAsync","address","JSON","stringify","city","console","log","state","_onRefresh","refreshing","getData","request_call_location","Platform","OS","isDevice","fetch","method","headers","body","current","response","json","data","text","item","_id","uri","Event_name","description","Event_date","Event_time","renderSeparator","styles","StyleSheet","create","container","flex","padding","fontSize","height"],"mappings":"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","sourcesContent":["import Constants from 'expo-constants';\nimport * as Location from 'expo-location';\nimport * as Permissions from 'expo-permissions';\nimport React, { Component } from 'react';\nimport { FlatList, Platform, RefreshControl, StyleSheet } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport TravelGuide from '../Guide/TravelGuide';\n\nexport default class Latest extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      refreshing: false,\n      location: null,\n      address: null,\n    };\n  }\n\n  _getLocationAsync = async () => {\n    let { status } = await Permissions.askAsync(Permissions.LOCATION);\n    if (status !== \"granted\") {\n      this.setState({\n        errorMessage: \"Permission to access location was denied\",\n      });\n    }\n\n    let location = await Location.getCurrentPositionAsync({});\n    this.setState({ location });\n\n    const { latitude, longitude } = location.coords;\n    this.getGeocodeAsync({ latitude, longitude });\n    // this.setState(address);\n  };\n  getGeocodeAsync = async (location) => {\n    let address = await Location.reverseGeocodeAsync(location);\n    address = JSON.stringify(address[0].city);\n    this.setState({ address });\n    console.log(\"=========\");\n    console.log(this.state.address);\n    console.log(\"=========\");\n  };\n\n  _onRefresh = () => {\n    this.setState({ refreshing: true });\n    this.getData();\n  };\n  componentDidMount() {\n    this.request_call_location();\n    this.getData();\n  }\n\n  request_call_location = async () => {\n    if (Platform.OS === \"android\" && !Constants.isDevice) {\n      this.setState({\n        errorMessage:\n          \"Oops, this will not work on Sketch in an Android emulator. Try it on your device!\",\n      });\n    } else {\n      await this._getLocationAsync();\n    }\n  };\n\n  getData = async () => {\n    // const response = await fetch(\"http://10.113.50.196:9000/api/news\");\n    const response = await fetch(\n      \"http://newsbuzz-server.herokuapp.com/api/display/registerEvent\",\n\n      {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          current: this.state.address,\n        }),\n      }\n    );\n\n    const data = await response.json();\n    this.setState({\n      data: data,\n      refreshing: false,\n    });\n  };\n\n  render() {\n    let address = \"\";\n    let text = \"Waiting..\";\n    if (this.state.errorMessage) {\n      text = this.state.errorMessage;\n    } else if (this.state.location) {\n      text = JSON.stringify(this.state.location);\n      address = this.state.address;\n      console.log(address);\n    }\n\n    return (\n      <ScrollView\n        vertical\n        showsVerticalScrollIndicator={false}\n        refreshControl={\n          <RefreshControl\n            refreshing={this.state.refreshing}\n            onRefresh={this._onRefresh}\n          />\n        }\n      >\n        <FlatList\n          data={this.state.data}\n          keyExtractor={(item) => item._id}\n          renderItem={({ item }) => (\n            <TravelGuide\n              placeUri={{\n                uri:\n                  // item.img\n                  \"https://images.pexels.com/photos/3422053/pexels-photo-3422053.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\",\n              }}\n              placeName={item.Event_name}\n              placeDes={item.description}\n              // capacity={item.Sitting_cap}\n              date={item.Event_date}\n              time={item.Event_time}\n              location={item.location}\n            />\n          )}\n          ItemSeparatorComponent={this.renderSeparator}\n        />\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}