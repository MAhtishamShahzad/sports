{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/apple/Desktop/projects/Newsbuzz_app/node_modules/react-native-view-more-text/index.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nvar styles = StyleSheet.create({\n  fullTextWrapper: {\n    opacity: 0,\n    position: 'absolute',\n    left: 0,\n    top: 0\n  },\n  viewMoreText: {\n    color: 'blue'\n  },\n  transparent: {\n    opacity: 0\n  }\n});\n\nvar ViewMoreText = function (_React$Component) {\n  _inherits(ViewMoreText, _React$Component);\n\n  function ViewMoreText() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ViewMoreText);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ViewMoreText)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.trimmedTextHeight = null;\n    _this.fullTextHeight = null;\n    _this.shouldShowMore = false;\n    _this.state = {\n      isFulltextShown: true,\n      numberOfLines: _this.props.numberOfLines\n    };\n\n    _this.hideFullText = function () {\n      if (_this.state.isFulltextShown && _this.trimmedTextHeight && _this.fullTextHeight) {\n        _this.shouldShowMore = _this.trimmedTextHeight < _this.fullTextHeight;\n\n        _this.setState({\n          isFulltextShown: false\n        });\n      }\n    };\n\n    _this.onLayoutTrimmedText = function (event) {\n      var height = event.nativeEvent.layout.height;\n      _this.trimmedTextHeight = height;\n\n      _this.hideFullText();\n    };\n\n    _this.onLayoutFullText = function (event) {\n      var height = event.nativeEvent.layout.height;\n      _this.fullTextHeight = height;\n\n      _this.hideFullText();\n    };\n\n    _this.onPressMore = function () {\n      _this.setState({\n        numberOfLines: null\n      }, function () {\n        _this.props.afterExpand();\n      });\n    };\n\n    _this.onPressLess = function () {\n      _this.setState({\n        numberOfLines: _this.props.numberOfLines\n      }, function () {\n        _this.props.afterCollapse();\n      });\n    };\n\n    _this.getWrapperStyle = function () {\n      if (_this.state.isFulltextShown) {\n        return styles.transparent;\n      }\n\n      return {};\n    };\n\n    _this.renderViewMore = function () {\n      return React.createElement(Text, {\n        style: styles.viewMoreText,\n        onPress: _this.onPressMore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        }\n      }, \"View More\");\n    };\n\n    _this.renderViewLess = function () {\n      return React.createElement(Text, {\n        style: styles.viewMoreText,\n        onPress: _this.onPressLess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }, \"View Less\");\n    };\n\n    _this.renderFooter = function () {\n      var numberOfLines = _this.state.numberOfLines;\n\n      if (_this.shouldShowMore === true) {\n        if (numberOfLines > 0) {\n          return (_this.props.renderViewMore || _this.renderViewMore)(_this.onPressMore);\n        }\n\n        return (_this.props.renderViewLess || _this.renderViewLess)(_this.onPressLess);\n      }\n\n      return null;\n    };\n\n    _this.renderFullText = function () {\n      if (_this.state.isFulltextShown) {\n        return React.createElement(View, {\n          onLayout: _this.onLayoutFullText,\n          style: styles.fullTextWrapper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          }\n        }, React.createElement(Text, {\n          style: _this.props.textStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          }\n        }, _this.props.children));\n      }\n\n      return null;\n    };\n\n    return _this;\n  }\n\n  _createClass(ViewMoreText, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: this.getWrapperStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        }\n      }, React.createElement(View, {\n        onLayout: this.onLayoutTrimmedText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        }\n      }, React.createElement(Text, {\n        style: this.props.textStyle,\n        numberOfLines: this.state.numberOfLines,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        }\n      }, this.props.children), this.renderFooter()), this.renderFullText());\n    }\n  }]);\n\n  return ViewMoreText;\n}(React.Component);\n\nViewMoreText.propTypes = {\n  renderViewMore: PropTypes.func,\n  renderViewLess: PropTypes.func,\n  afterCollapse: PropTypes.func,\n  afterExpand: PropTypes.func,\n  numberOfLines: PropTypes.number.isRequired,\n  textStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n};\nViewMoreText.defaultProps = {\n  afterCollapse: function afterCollapse() {},\n  afterExpand: function afterExpand() {},\n  textStyle: {}\n};\nexport default ViewMoreText;","map":{"version":3,"sources":["/Users/apple/Desktop/projects/Newsbuzz_app/node_modules/react-native-view-more-text/index.js"],"names":["React","PropTypes","styles","StyleSheet","create","fullTextWrapper","opacity","position","left","top","viewMoreText","color","transparent","ViewMoreText","trimmedTextHeight","fullTextHeight","shouldShowMore","state","isFulltextShown","numberOfLines","props","hideFullText","setState","onLayoutTrimmedText","event","height","nativeEvent","layout","onLayoutFullText","onPressMore","afterExpand","onPressLess","afterCollapse","getWrapperStyle","renderViewMore","renderViewLess","renderFooter","renderFullText","textStyle","children","Component","propTypes","func","number","isRequired","oneOfType","object","array","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport PropTypes from 'prop-types';\n\nconst styles = StyleSheet.create({\n  fullTextWrapper: {\n    opacity: 0,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n  },\n  viewMoreText: {\n    color: 'blue',\n  },\n  transparent: {\n    opacity: 0,\n  },\n});\n\nclass ViewMoreText extends React.Component {\n  trimmedTextHeight = null;\n  fullTextHeight = null;\n  shouldShowMore = false;\n\n  state = {\n    isFulltextShown: true,\n    numberOfLines: this.props.numberOfLines,\n  }\n\n  hideFullText = () => {\n    if (\n      this.state.isFulltextShown &&\n      this.trimmedTextHeight &&\n      this.fullTextHeight\n    ) {\n      this.shouldShowMore = this.trimmedTextHeight < this.fullTextHeight;\n      this.setState({\n        isFulltextShown: false,\n      });\n    }\n  }\n\n  onLayoutTrimmedText = (event) => {\n    const {\n      height,\n    } = event.nativeEvent.layout;\n\n    this.trimmedTextHeight = height;\n    this.hideFullText();\n  }\n\n  onLayoutFullText = (event) => {\n    const {\n      height,\n    } = event.nativeEvent.layout;\n\n    this.fullTextHeight = height;\n    this.hideFullText();\n  }\n\n  onPressMore = () => {\n    this.setState({\n      numberOfLines: null,\n    }, () => {\n      this.props.afterExpand();\n    });\n  }\n\n  onPressLess = () => {\n    this.setState({\n      numberOfLines: this.props.numberOfLines,\n    }, () => {\n      this.props.afterCollapse();\n    });\n  }\n\n  getWrapperStyle = () => {\n    if (this.state.isFulltextShown) {\n      return styles.transparent;\n    }\n    return {};\n  }\n\n  renderViewMore = () => (\n    <Text\n      style={styles.viewMoreText}\n      onPress={this.onPressMore}\n    >\n      View More\n    </Text>\n  )\n\n  renderViewLess = () => (\n    <Text\n      style={styles.viewMoreText}\n      onPress={this.onPressLess}\n    >\n      View Less\n    </Text>\n  )\n\n  renderFooter = () => {\n    const {\n      numberOfLines,\n    } = this.state;\n\n    if (this.shouldShowMore === true) {\n      if (numberOfLines > 0) {\n        return (this.props.renderViewMore || this.renderViewMore)(this.onPressMore);\n      }\n      return (this.props.renderViewLess || this.renderViewLess)(this.onPressLess);\n    }\n    return null;\n  }\n\n  renderFullText = () => {\n    if (this.state.isFulltextShown) {\n      return (\n        <View onLayout={this.onLayoutFullText} style={styles.fullTextWrapper}>\n          <Text style={this.props.textStyle}>{this.props.children}</Text>\n        </View>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <View style={this.getWrapperStyle()}>\n        <View onLayout={this.onLayoutTrimmedText}>\n          <Text\n            style={this.props.textStyle}\n            numberOfLines={this.state.numberOfLines}\n          >\n            {this.props.children}\n          </Text>\n          {this.renderFooter()}\n        </View>\n\n        {this.renderFullText()}\n      </View>\n    );\n  }\n}\n\nViewMoreText.propTypes = {\n  renderViewMore: PropTypes.func,\n  renderViewLess: PropTypes.func,\n  afterCollapse: PropTypes.func,\n  afterExpand: PropTypes.func,\n  numberOfLines: PropTypes.number.isRequired,\n  textStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nViewMoreText.defaultProps = {\n  afterCollapse: () => {},\n  afterExpand: () => {},\n  textStyle: {},\n};\n\nexport default ViewMoreText;\n"]},"metadata":{},"sourceType":"module"}