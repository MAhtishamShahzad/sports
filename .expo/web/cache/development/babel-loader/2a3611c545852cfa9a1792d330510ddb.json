{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/apple/Desktop/projects/reactnative/sports/NewsBuzz/src/screens/components/Event/Register.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport DatePicker from \"react-native-datepicker\";\nimport { Container, Content, Header, Form, Input, Item, Button, Label } from \"native-base\";\n\nvar Register = function (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n\n    _this.getdata = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.state.Manager_name == \" \") {\n                alert(\"enter Manager_name \");\n              } else if (_this.state.Manager_phone == \" \") {\n                alert(\"enter Manager_phone \");\n              } else if (_this.state.Manager_email == \" \") {\n                alert(\"enter Manager_email \");\n              } else if (_this.state.Manager_email == \" \") {\n                alert(\"enter Manager_email \");\n              } else if (_this.state.Manager_locatioin == \" \") {\n                alert(\"enter Manager_locatioin \");\n              } else if (_this.state.Event_city == \" \") {\n                alert(\"enter Event_city \");\n              } else if (_this.state.Event_time == \" \") {\n                alert(\"enter Event_time \");\n              } else if (_this.state.Event_date == \" \") {\n                alert(\"enter Event_date \");\n              } else if (_this.state.Event_title == \" \") {\n                alert(\"enter Event_title \");\n              } else if (_this.state.sitting_capacity == \" \") {\n                alert(\"enter sitting_capacity \");\n              } else if (_this.state.Event_description == \" \") {\n                alert(\"enter Event_description \");\n              } else {\n                  fetch(\"http://newsbuzz-server.herokuapp.com/saveEvent\", {\n                    method: \"POST\",\n                    headers: {\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                      Manager_name: _this.state.Manager_name,\n                      Manager_phone: _this.state.Manager_phone,\n                      Manager_email: _this.state.Manager_email,\n                      Manager_locatioin: _this.state.Manager_locatioin,\n                      Event_city: _this.state.Event_city,\n                      Event_time: _this.state.Event_time,\n                      Event_date: _this.state.Event_date,\n                      Event_title: _this.state.Event_title,\n                      sitting_capacity: _this.state.sitting_capacity,\n                      Event_description: _this.state.Event_description\n                    })\n                  }).then(function (res) {\n                    return res.json();\n                  }).then(function (data) {\n                    if (data == null) alert(\"-__- \");else {\n                      alert(\"successfull\");\n                    }\n                  });\n                }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      Manager_name: \" \",\n      Manager_phone: \" \",\n      Manager_email: \" \",\n      Manager_locatioin: \" \",\n      Event_city: \" \",\n      Event_time: \" \",\n      Event_date: \"01-01-2020\",\n      Event_title: \" \",\n      sitting_capacity: \" \",\n      Event_description: \" \"\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        vertical: true,\n        showsVerticalScrollIndicator: false,\n        style: {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 7\n        }\n      }, React.createElement(Container, {\n        style: {\n          flex: 1,\n          backgroundColor: \"#fff\",\n          padding: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 9\n        }\n      }, React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }\n      }, React.createElement(Item, {\n        floatingLabel: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }\n      }, React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 15\n        }\n      }, \"Manager Name:\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(Manager_name) {\n          return _this2.setState({\n            Manager_name: Manager_name\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }\n      })), React.createElement(Item, {\n        floatingLabel: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }\n      }, React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 15\n        }\n      }, \"Manager Phone#:\"), React.createElement(Input, {\n        autoCorrect: false,\n        keyboardType: \"numeric\",\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(Manager_phone) {\n          return _this2.setState({\n            Manager_phone: Manager_phone\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 15\n        }\n      })), React.createElement(Item, {\n        floatingLabel: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }\n      }, React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 15\n        }\n      }, \"Manager Email:\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(Manager_email) {\n          return _this2.setState({\n            Manager_email: Manager_email\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 15\n        }\n      })), React.createElement(Item, {\n        floatingLabel: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }\n      }, React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 15\n        }\n      }, \"Event location\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(Manager_locatioin) {\n          return _this2.setState({\n            Manager_locatioin: Manager_locatioin\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 15\n        }\n      })), React.createElement(Item, {\n        floatingLabel: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }\n      }, React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 15\n        }\n      }, \"Event City:\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(Event_city) {\n          return _this2.setState({\n            Event_city: Event_city\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 15\n        }\n      })), React.createElement(Item, {\n        floatingLabel: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }\n      }, React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 15\n        }\n      }, \"Event timihg:\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(Event_time) {\n          return _this2.setState({\n            Event_time: Event_time\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }\n      })), React.createElement(Item, {\n        floatingLabel: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }\n      }, React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 15\n        }\n      }, \"Event titile:\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(Event_title) {\n          return _this2.setState({\n            Event_title: Event_title\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 15\n        }\n      })), React.createElement(Item, {\n        floatingLabel: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }\n      }, React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 15\n        }\n      }, \"Sitting Capacity:\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(sitting_capacity) {\n          return _this2.setState({\n            sitting_capacity: sitting_capacity\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 15\n        }\n      })), React.createElement(Item, {\n        floatingLabel: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }\n      }, React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 15\n        }\n      }, \"Event description:\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(Event_description) {\n          return _this2.setState({\n            Event_description: Event_description\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 15\n        }\n      })), React.createElement(DatePicker, {\n        style: {\n          alignItems: \"auto\",\n          width: 200\n        },\n        date: this.state.Event_date,\n        mode: \"date\",\n        placeholder: \"select date\",\n        format: \"DD-MM-YYYY\",\n        minDate: \"01-01-2016\",\n        maxDate: \"01-01-2030\",\n        confirmBtnText: \"Confirm\",\n        cancelBtnText: \"Cancel\",\n        customStyles: {\n          dateIcon: {\n            position: \"absolute\",\n            left: 10,\n            top: 30,\n            marginLeft: 10\n          },\n          dateInput: {\n            marginLeft: 20,\n            marginTop: 50\n          }\n        },\n        onDateChange: function onDateChange(date) {\n          _this2.setState({\n            Event_date: date\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        onPress: this.getdata,\n        style: {\n          marginTop: 50\n        },\n        full: true,\n        rounded: true,\n        success: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 15\n        }\n      }, \"Register\")))));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nexport { Register as default };","map":{"version":3,"sources":["/Users/apple/Desktop/projects/reactnative/sports/NewsBuzz/src/screens/components/Event/Register.js"],"names":["React","ScrollView","DatePicker","Container","Content","Header","Form","Input","Item","Button","Label","Register","props","getdata","state","Manager_name","alert","Manager_phone","Manager_email","Manager_locatioin","Event_city","Event_time","Event_date","Event_title","sitting_capacity","Event_description","fetch","method","headers","body","JSON","stringify","then","res","json","data","flex","backgroundColor","padding","setState","alignItems","width","dateIcon","position","left","top","marginLeft","dateInput","marginTop","date","color","Component"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import { View, Text, StyleSheet, StatusBar } from \"react-native\";\n// // import DatePicker from \"react-native-simple-date-picker\";\n// import { ScrollView } from \"react-native-gesture-handler\";\n// import DatePicker from \"react-native-datepicker\";\n// import {\n//   Container,\n//   Content,\n//   Header,\n//   Form,\n//   Input,\n//   Item,\n//   Button,\n//   TouchableOpacity,\n//   Label\n// } from \"native-base\";\n// import AlertPro from \"react-native-alert-pro\";\n\n// import TimePicker from \"react-native-24h-timepicker\";\n// export default class Register extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       Manager_name: \" \",\n//       Manager_phone: \" \",\n//       Manager_email: \" \",\n//       Manager_locatioin: \" \",\n//       Event_city: \" \",\n//       Event_time: \" \",\n//       Event_date: \"15-05-2018\",\n//       Event_title: \" \",\n//       sitting_capacity: \" \",\n//       Event_description: \" \"\n//     };\n//   }\n\n//   getdata = async () => {\n//     if (this.state.Manager_name == \" \") {\n//       alert(\"enter Manager_name \");\n//     } else if (this.state.Manager_phone == \" \") {\n//       alert(\"enter Manager_phone \");\n//     } else if (this.state.Manager_email == \" \") {\n//       alert(\"enter Manager_email \");\n//     } else if (this.state.Manager_email == \" \") {\n//       alert(\"enter Manager_email \");\n//     } else if (this.state.Manager_locatioin == \" \") {\n//       alert(\"enter Manager_locatioin \");\n//     } else if (this.state.Event_city == \" \") {\n//       alert(\"enter Event_city \");\n//     } else if (this.state.Event_time == \" \") {\n//       alert(\"enter Event_time \");\n//     } else if (this.state.Event_date == \" \") {\n//       alert(\"enter Event_date \");\n//     } else if (this.state.Event_title == \" \") {\n//       alert(\"enter Event_title \");\n//     } else if (this.state.sitting_capacity == \" \") {\n//       alert(\"enter sitting_capacity \");\n//     } else if (this.state.Event_description == \" \") {\n//       alert(\"enter Event_description \");\n//     }\n\n//     // alert(\"successfull\");\n//     else {\n//       fetch(\"http:/http://newsbuzz-server.herokuapp.com/saveEvent\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\"\n//         },\n//         body: JSON.stringify({\n//           Manager_name: this.state.Manager_name,\n//           Manager_phone: this.state.Manager_phone,\n//           Manager_email: this.state.Manager_email,\n//           Manager_locatioin: this.state.Manager_locatioin,\n//           Event_city: this.state.Event_city,\n//           Event_time: this.state.Event_time,\n//           Event_date: this.state.Event_date,\n//           Event_title: this.state.Event_title,\n//           sitting_capacity: this.state.sitting_capacity,\n//           Event_description: this.state.Event_description\n//         })\n//       })\n//         .then(res => res.json())\n//         .then(data => {\n//           if (data == null) alert(\"-__- \");\n//           else {\n//             alert(\"successfull\");\n//           }\n//         });\n//     }\n//   };\n\n//   onCancel() {\n//     this.TimePicker.close();\n//   }\n\n//   onConfirm(hour, minute) {\n//     this.setState({ Event_time: `${hour}:${minute}` });\n//     this.TimePicker.close();\n//   }\n//   render() {\n//     return (\n//       <ScrollView\n//         vertical\n//         showsVerticalScrollIndicator={false}\n//         style={\n//           {\n//             // marginTop: StatusBar.currentHeight\n//           }\n//         }\n//       >\n//         <Container\n//           style={{\n//             // marginTop: StatusBar.currentHeight,\n//             flex: 1,\n//             backgroundColor: \"#fff\",\n//             // justifyContent: \"center\",\n//             padding: 10\n//           }}\n//         >\n//           <Form>\n//             <Item floatingLabel>\n//               <Label>Manager Name:</Label>\n//               <Input\n//                 autoCorrect={false}\n//                 autoCapitalize=\"none\"\n//                 onChangeText={Manager_name => this.setState({ Manager_name })}\n//               />\n//             </Item>\n//             <Item floatingLabel>\n//               <Label>Manager Phone#:</Label>\n//               <Input\n//                 autoCorrect={false}\n//                 keyboardType=\"numeric\"\n//                 autoCapitalize=\"none\"\n//                 onChangeText={Manager_phone => this.setState({ Manager_phone })}\n//               />\n//             </Item>\n//             <Item floatingLabel>\n//               <Label>Manager Email:</Label>\n//               <Input\n//                 autoCorrect={false}\n//                 autoCapitalize=\"none\"\n//                 onChangeText={Manager_email => this.setState({ Manager_email })}\n//               />\n//             </Item>\n//             <Item floatingLabel>\n//               <Label>Event location</Label>\n//               <Input\n//                 autoCorrect={false}\n//                 autoCapitalize=\"none\"\n//                 onChangeText={Manager_locatioin =>\n//                   this.setState({ Manager_locatioin })\n//                 }\n//               />\n//             </Item>\n//             <Item floatingLabel>\n//               <Label>Event City:</Label>\n//               <Input\n//                 autoCorrect={false}\n//                 autoCapitalize=\"none\"\n//                 onChangeText={Event_city => this.setState({ Event_city })}\n//               />\n//             </Item>\n//             {/* <View style={styles.container11}>\n//               <Text style={styles.text}>REACT NATIVE</Text>\n//               <Text style={styles.text}>24 HOURS FORMAT TIMEPICKER</Text>\n//               <TouchableOpacity\n//                 onPress={() => this.TimePicker.open()}\n//                 style={styles.button}\n//               >\n//                 <Text style={styles.buttonText}>TIMEPICKER</Text>\n//               </TouchableOpacity>\n//               <Text style={styles.text}>{this.state.Event_time}</Text>\n//               <TimePicker\n//                 ref={ref => {\n//                   this.TimePicker = ref;\n//                 }}\n//                 onCancel={() => this.onCancel()}\n//                 onConfirm={(hour, minute) => this.onConfirm(hour, minute)}\n//               />\n//             </View> */}\n//             <Item floatingLabel>\n//               <Label>Event time:</Label>\n//               <Input\n//                 autoCorrect={false}\n//                 autoCapitalize=\"none\"\n//                 onChangeText={Event_city => this.setState({ Event_time })}\n//               />\n//               s\n//             </Item>\n//             {/* </Item> */}\n//             {/* <Item floatingLabel> */}\n//             {/* <Label>Event date:</Label> */}\n//             {/* <View > */}\n//             <DatePicker\n//               style={{ alignItems: \"auto\", width: 200 }}\n//               date={this.state.Event_date} //initial date from state\n//               mode=\"date\" //The enum of date, datetime and time\n//               placeholder=\"select date\"\n//               format=\"DD-MM-YYYY\"\n//               minDate=\"01-01-2016\"\n//               maxDate=\"01-01-2030\"\n//               confirmBtnText=\"Confirm\"\n//               cancelBtnText=\"Cancel\"\n//               customStyles={{\n//                 dateIcon: {\n//                   position: \"absolute\",\n//                   left: 0,\n//                   top: 30,\n//                   marginLeft: 0\n//                 },\n//                 dateInput: {\n//                   marginLeft: 32,\n//                   marginTop: 50\n//                 }\n//               }}\n//               onDateChange={date => {\n//                 this.setState({ Event_date: date });\n//               }}\n//             />\n//             {/* </View> */}\n//             {/* <Input\n//                 autoCorrect={false}\n//                 autoCapitalize=\"none\"\n//                 onChangeText={Event_date => this.setState({ Event_date })}\n//               /> */}\n//             {/* </Item> */}\n//             <Item floatingLabel>\n//               <Label>Event titile:</Label>\n//               <Input\n//                 autoCorrect={false}\n//                 autoCapitalize=\"none\"\n//                 onChangeText={Event_title => this.setState({ Event_title })}\n//               />\n//             </Item>\n//             <Item floatingLabel>\n//               <Label>Sitting Capacity:</Label>\n//               <Input\n//                 autoCorrect={false}\n//                 autoCapitalize=\"none\"\n//                 onChangeText={sitting_capacity =>\n//                   this.setState({ sitting_capacity })\n//                 }\n//               />\n//             </Item>\n//             <Item floatingLabel>\n//               <Label>Event description:</Label>\n//               <Input\n//                 autoCorrect={false}\n//                 autoCapitalize=\"none\"\n//                 onChangeText={Event_description =>\n//                   this.setState({ Event_description })\n//                 }\n//               />\n//             </Item>\n\n//             <Button\n//               onPress={this.getdata}\n//               style={{ marginTop: 10 }}\n//               full\n//               rounded\n//               success\n//             >\n//               <Text style={{ color: \"white\" }}>Register</Text>\n//             </Button>\n//           </Form>\n//         </Container>\n//       </ScrollView>\n//     );\n//   }\n// }\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     alignItems: \"center\",\n//     justifyContent: \"center\",\n//     marginTop: 50,\n//     padding: 16\n//   },\n//   container11: {\n//     flex: 1,\n//     alignItems: \"center\",\n//     backgroundColor: \"#fff\",\n//     paddingTop: 100\n//   },\n//   text: {\n//     fontSize: 20,\n//     marginTop: 10\n//   },\n//   button: {\n//     backgroundColor: \"#4EB151\",\n//     paddingVertical: 11,\n//     paddingHorizontal: 17,\n//     borderRadius: 3,\n//     marginVertical: 50\n//   },\n//   buttonText: {\n//     color: \"#FFFFFF\",\n//     fontSize: 16,\n//     fontWeight: \"600\"\n//   }\n// });\n\nimport React from \"react\";\nimport { View, Text, StyleSheet, StatusBar } from \"react-native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport DatePicker from \"react-native-datepicker\";\n\nimport {\n  Container,\n  Content,\n  Header,\n  Form,\n  Input,\n  Item,\n  Button,\n  Label,\n} from \"native-base\";\n//import AlertPro from \"react-native-alert-pro\";\n\nexport default class Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Manager_name: \" \",\n      Manager_phone: \" \",\n      Manager_email: \" \",\n      Manager_locatioin: \" \",\n      Event_city: \" \",\n      Event_time: \" \",\n      Event_date: \"01-01-2020\",\n      Event_title: \" \",\n      sitting_capacity: \" \",\n      Event_description: \" \",\n    };\n  }\n\n  getdata = async () => {\n    if (this.state.Manager_name == \" \") {\n      alert(\"enter Manager_name \");\n    } else if (this.state.Manager_phone == \" \") {\n      alert(\"enter Manager_phone \");\n    } else if (this.state.Manager_email == \" \") {\n      alert(\"enter Manager_email \");\n    } else if (this.state.Manager_email == \" \") {\n      alert(\"enter Manager_email \");\n    } else if (this.state.Manager_locatioin == \" \") {\n      alert(\"enter Manager_locatioin \");\n    } else if (this.state.Event_city == \" \") {\n      alert(\"enter Event_city \");\n    } else if (this.state.Event_time == \" \") {\n      alert(\"enter Event_time \");\n    } else if (this.state.Event_date == \" \") {\n      alert(\"enter Event_date \");\n    } else if (this.state.Event_title == \" \") {\n      alert(\"enter Event_title \");\n    } else if (this.state.sitting_capacity == \" \") {\n      alert(\"enter sitting_capacity \");\n    } else if (this.state.Event_description == \" \") {\n      alert(\"enter Event_description \");\n    }\n\n    // alert(\"successfull\");\n    else {\n      fetch(\"http://newsbuzz-server.herokuapp.com/saveEvent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          Manager_name: this.state.Manager_name,\n          Manager_phone: this.state.Manager_phone,\n          Manager_email: this.state.Manager_email,\n          Manager_locatioin: this.state.Manager_locatioin,\n          Event_city: this.state.Event_city,\n          Event_time: this.state.Event_time,\n          Event_date: this.state.Event_date,\n          Event_title: this.state.Event_title,\n          sitting_capacity: this.state.sitting_capacity,\n          Event_description: this.state.Event_description,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data == null) alert(\"-__- \");\n          else {\n            alert(\"successfull\");\n          }\n        });\n    }\n  };\n\n  render() {\n    return (\n      <ScrollView\n        vertical\n        showsVerticalScrollIndicator={false}\n        style={\n          {\n            // marginTop: StatusBar.currentHeight\n          }\n        }\n      >\n        <Container\n          style={{\n            // marginTop: StatusBar.currentHeight,\n            flex: 1,\n            backgroundColor: \"#fff\",\n            // justifyContent: \"center\",\n            padding: 10,\n          }}\n        >\n          <Form>\n            <Item floatingLabel>\n              <Label>Manager Name:</Label>\n              <Input\n                autoCorrect={false}\n                autoCapitalize=\"none\"\n                onChangeText={(Manager_name) => this.setState({ Manager_name })}\n              />\n            </Item>\n            <Item floatingLabel>\n              <Label>Manager Phone#:</Label>\n              <Input\n                autoCorrect={false}\n                keyboardType=\"numeric\"\n                autoCapitalize=\"none\"\n                onChangeText={(Manager_phone) =>\n                  this.setState({ Manager_phone })\n                }\n              />\n            </Item>\n            <Item floatingLabel>\n              <Label>Manager Email:</Label>\n              <Input\n                autoCorrect={false}\n                autoCapitalize=\"none\"\n                onChangeText={(Manager_email) =>\n                  this.setState({ Manager_email })\n                }\n              />\n            </Item>\n            <Item floatingLabel>\n              <Label>Event location</Label>\n              <Input\n                autoCorrect={false}\n                autoCapitalize=\"none\"\n                onChangeText={(Manager_locatioin) =>\n                  this.setState({ Manager_locatioin })\n                }\n              />\n            </Item>\n            <Item floatingLabel>\n              <Label>Event City:</Label>\n              <Input\n                autoCorrect={false}\n                autoCapitalize=\"none\"\n                onChangeText={(Event_city) => this.setState({ Event_city })}\n              />\n            </Item>\n            <Item floatingLabel>\n              <Label>Event timihg:</Label>\n              <Input\n                autoCorrect={false}\n                autoCapitalize=\"none\"\n                onChangeText={(Event_time) => this.setState({ Event_time })}\n              />\n            </Item>\n\n            <Item floatingLabel>\n              <Label>Event titile:</Label>\n              <Input\n                autoCorrect={false}\n                autoCapitalize=\"none\"\n                onChangeText={(Event_title) => this.setState({ Event_title })}\n              />\n            </Item>\n            <Item floatingLabel>\n              <Label>Sitting Capacity:</Label>\n              <Input\n                autoCorrect={false}\n                autoCapitalize=\"none\"\n                onChangeText={(sitting_capacity) =>\n                  this.setState({ sitting_capacity })\n                }\n              />\n            </Item>\n            <Item floatingLabel>\n              <Label>Event description:</Label>\n              <Input\n                autoCorrect={false}\n                autoCapitalize=\"none\"\n                onChangeText={(Event_description) =>\n                  this.setState({ Event_description })\n                }\n              />\n            </Item>\n            <DatePicker\n              style={{ alignItems: \"auto\", width: 200 }}\n              date={this.state.Event_date} //initial date from state\n              mode=\"date\" //The enum of date, datetime and time\n              placeholder=\"select date\"\n              format=\"DD-MM-YYYY\"\n              minDate=\"01-01-2016\"\n              maxDate=\"01-01-2030\"\n              confirmBtnText=\"Confirm\"\n              cancelBtnText=\"Cancel\"\n              customStyles={{\n                dateIcon: {\n                  position: \"absolute\",\n                  left: 10,\n                  top: 30,\n                  marginLeft: 10,\n                },\n                dateInput: {\n                  marginLeft: 20,\n                  marginTop: 50,\n                  // marginLeft:\n                },\n              }}\n              onDateChange={(date) => {\n                this.setState({ Event_date: date });\n              }}\n            />\n\n            <Button\n              onPress={this.getdata}\n              style={{ marginTop: 50 }}\n              full\n              rounded\n              success\n            >\n              <Text style={{ color: \"white\" }}>Register</Text>\n            </Button>\n          </Form>\n        </Container>\n      </ScrollView>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}