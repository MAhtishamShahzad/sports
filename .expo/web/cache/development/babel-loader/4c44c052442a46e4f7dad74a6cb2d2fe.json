{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/apple/Desktop/projects/Newsbuzz_app/NewsBuzz/src/screens/settings.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Card, Text, ButtonGroup, Button } from 'react-native-elements';\nimport * as fire from 'firebase';\nimport { Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions';\nvar SHOW_NOTIFICATIONS_KEY = 'notifications';\nvar THEME_COLOR_KEY = 'theme_color';\n\nvar SettingScreen = function (_Component) {\n  _inherits(SettingScreen, _Component);\n\n  function SettingScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SettingScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SettingScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showNotifications: false,\n      num: ''\n    };\n    _this.colors = ['blue', 'green', 'red', 'purple'];\n\n    _this.loadAsyncData = function _callee() {\n      var showNotifications, themeColorIndex;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(SHOW_NOTIFICATIONS_KEY));\n\n            case 3:\n              showNotifications = _context.sent;\n\n              if (showNotifications !== null) {\n                _this.setState({\n                  showNotifications: JSON.parse(showNotifications)\n                });\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n              _context.prev = 10;\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(THEME_COLOR_KEY));\n\n            case 13:\n              themeColorIndex = _context.sent;\n\n              if (themeColorIndex !== null) {\n                _this.props.navigation.setParams({\n                  themeIndex: JSON.parse(themeColorIndex)\n                });\n              }\n\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t1 = _context[\"catch\"](10);\n              console.log(_context.t1);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7], [10, 17]]);\n    };\n\n    _this.storeNotification = function _callee2(key, showNotifications) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(SHOW_NOTIFICATIONS_KEY, JSON.stringify(showNotifications)));\n\n            case 3:\n              _this.setState({\n                showNotifications: showNotifications\n              });\n\n              console.log(showNotifications);\n\n              if (showNotifications) {\n                _this.registerForPushNotifications();\n              } else {\n                console.log('Going In UnRegister');\n              }\n\n              if (showNotifications == false) {\n                _this.unRegisterForPushnNotification();\n              }\n\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 9]]);\n    };\n\n    _this.storeThemeColors = function _callee3(key, themeIndex) {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(THEME_COLOR_KEY, JSON.stringify(themeIndex)));\n\n            case 3:\n              _this.props.navigation.setParams({\n                themeIndex: themeIndex\n              });\n\n              _context3.next = 9;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]]);\n    };\n\n    _this.restoreDefaults = function () {\n      _this.storeNotification(SHOW_NOTIFICATIONS_KEY, false);\n\n      _this.storeThemeColors(THEME_COLOR_KEY, 0);\n    };\n\n    _this.registerForPushNotifications = function _callee4() {\n      var tokens, _await$Permissions$ge, existingStatus, finalStatus, _await$Permissions$as, status, token, found, num;\n\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log('notifications');\n              tokens = [];\n              fire.database().ref('tokens/').once('value', function (snapshot) {\n                console.log(snapshot);\n                snapshot.forEach(function (child) {\n                  var a = child.val().tok;\n                  tokens.push(a);\n                  console.log(tokens);\n                });\n              });\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n            case 5:\n              _await$Permissions$ge = _context4.sent;\n              existingStatus = _await$Permissions$ge.status;\n              finalStatus = existingStatus;\n\n              if (!(existingStatus !== 'granted')) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.next = 11;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n            case 11:\n              _await$Permissions$as = _context4.sent;\n              status = _await$Permissions$as.status;\n              finalStatus = status;\n\n            case 14:\n              if (!(finalStatus !== 'granted')) {\n                _context4.next = 16;\n                break;\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 16:\n              _context4.prev = 16;\n              _context4.next = 19;\n              return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n            case 19:\n              token = _context4.sent;\n              console.log(\"hello\");\n              console.log(token);\n              found = false;\n              tokens.forEach(function (t) {\n                if (t == token) {\n                  console.log('Token Found');\n                  found = true;\n                }\n              });\n\n              if (found == false) {\n                console.log('Sending New Token');\n                num = Math.floor(Math.random() * 100 + 1).toString();\n\n                _this.setState({\n                  num: num\n                });\n\n                fire.database().ref('scholarship/').child(num).set({\n                  tok: token\n                });\n              }\n\n              _context4.next = 30;\n              break;\n\n            case 27:\n              _context4.prev = 27;\n              _context4.t0 = _context4[\"catch\"](16);\n              console.log(\"error\" + _context4.t0);\n\n            case 30:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[16, 27]]);\n    };\n\n    _this.unRegisterForPushnNotification = function _callee5() {\n      var rem, reference;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              rem = _this.state.num;\n              reference = fire.database().ref('scholarship/' + rem);\n              reference.remove();\n              console.log('done');\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    };\n\n    _this.readUserData = function _callee6() {\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              console.log('helloooooooooooooooooo');\n              fire.database().ref('tokens/').once('value', function (snapshot) {\n                var tasks = [];\n                ;\n                snapshot.forEach(function (child) {\n                  var a = child.val().tok;\n                  var response = fetch('https://exp.host/--/api/v2/push/send', {\n                    method: 'POST',\n                    headers: {\n                      Accept: 'application/json',\n                      'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                      to: a,\n                      sound: 'default',\n                      title: 'aur sunao',\n                      body: 'mai thek tm btao!'\n                    })\n                  });\n                });\n              });\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SettingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.navigation.setParams({\n        colors: this.colors\n      });\n      this.loadAsyncData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.disableYellowBox = true;\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        }\n      }, React.createElement(Card, {\n        containerStyle: styles.card,\n        title: \"Notifications\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        }\n      }, React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        }\n      }, \"Show Notifications\"), React.createElement(Switch, {\n        style: {\n          marginLeft: 16\n        },\n        trackColor: \"red\",\n        thumbColor: \"white\",\n        value: this.state.showNotifications,\n        onValueChange: function onValueChange(showNotifications) {\n          _this2.storeNotification(SHOW_NOTIFICATIONS_KEY, showNotifications);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        }\n      }))), React.createElement(Button, {\n        containerStyle: styles.restoreButtonContainer,\n        buttonStyle: {\n          padding: 16,\n          backgroundColor: 'red'\n        },\n        onPress: this.readUserData,\n        title: \"Send Notification\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        }\n      }));\n    }\n  }]);\n\n  return SettingScreen;\n}(Component);\n\nexport { SettingScreen as default };\n;\nvar styles = StyleSheet.create({\n  container: {\n    borderColor: 'black',\n    height: '100%',\n    backgroundColor: '#D0D3D4',\n    marginTop: 40,\n    flex: 1\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonGroup: {\n    height: 60,\n    width: 300\n  },\n  buttonGroupText: {\n    fontSize: 18,\n    color: 'white'\n  },\n  slider: {\n    width: 250,\n    marginLeft: 16\n  },\n  card: {\n    alignItems: 'center',\n    backgroundColor: '#EAECEE',\n    borderColor: '#ABB2B9',\n    borderWidth: 0.3,\n    width: '90%'\n  },\n  restoreButtonContainer: {\n    margin: 32\n  }\n});","map":{"version":3,"sources":["/Users/apple/Desktop/projects/Newsbuzz_app/NewsBuzz/src/screens/settings.js"],"names":["React","Component","Card","Text","ButtonGroup","Button","fire","Notifications","Permissions","SHOW_NOTIFICATIONS_KEY","THEME_COLOR_KEY","SettingScreen","state","showNotifications","num","colors","loadAsyncData","AsyncStorage","getItem","setState","JSON","parse","console","log","themeColorIndex","props","navigation","setParams","themeIndex","storeNotification","key","setItem","stringify","registerForPushNotifications","unRegisterForPushnNotification","storeThemeColors","restoreDefaults","tokens","database","ref","once","snapshot","forEach","child","a","val","tok","push","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","askAsync","getExpoPushTokenAsync","token","found","t","Math","floor","random","toString","set","rem","reference","remove","readUserData","tasks","response","fetch","method","headers","Accept","body","to","sound","title","disableYellowBox","styles","container","card","row","fontSize","marginLeft","restoreButtonContainer","padding","backgroundColor","StyleSheet","create","borderColor","height","marginTop","flex","flexDirection","alignItems","buttonGroup","width","buttonGroupText","color","slider","borderWidth","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Switch,AsyncStorage\n\n} from 'react-native';\nimport { Card, Text, ButtonGroup, Button } from 'react-native-elements';\n\nimport * as fire from 'firebase';\nimport {Notifications} from 'expo';\nimport * as Permissions from 'expo-permissions';\n\n\n\n\n\nconst SHOW_NOTIFICATIONS_KEY = 'notifications';\nconst THEME_COLOR_KEY = 'theme_color';\n\nexport default class SettingScreen extends Component {\n\n  state = {\n    showNotifications: false,\n    num:''\n  }\n\n  colors = ['blue', 'green', 'red', 'purple'];\n\n\n\n  componentDidMount() {\n    this.props.navigation.setParams({ colors: this.colors });\n    this.loadAsyncData();\n \n   \n  }\n\n  loadAsyncData = async () => {\n    try {\n      const showNotifications = await AsyncStorage.getItem(SHOW_NOTIFICATIONS_KEY)\n      if (showNotifications !== null) {\n        this.setState({ showNotifications: JSON.parse(showNotifications) });\n      }\n    } catch (e) {\n      console.log(e)\n    }\n\n    try {\n      const themeColorIndex = await AsyncStorage.getItem(THEME_COLOR_KEY)\n      \n      if (themeColorIndex !== null) {\n        this.props.navigation.setParams({ themeIndex: JSON.parse(themeColorIndex) });\n      }\n    } catch (e) {\n      console.log(e)\n    }\n\n    \n  }\n\n  storeNotification = async (key, showNotifications) => {\n    try {\n      await AsyncStorage.setItem(SHOW_NOTIFICATIONS_KEY, JSON.stringify(showNotifications))\n      this.setState({ showNotifications });\n      console.log(showNotifications);\n      if(showNotifications){\n        this.registerForPushNotifications()\n        \n      }\n      else{\n        console.log('Going In UnRegister');\n      }\n      if(showNotifications==false){\n        this.unRegisterForPushnNotification();\n      }\n\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  storeThemeColors = async (key, themeIndex) => {\n    try {\n      await AsyncStorage.setItem(THEME_COLOR_KEY, JSON.stringify(themeIndex));\n      this.props.navigation.setParams({ themeIndex });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n \n\n  restoreDefaults = () => {\n    this.storeNotification(SHOW_NOTIFICATIONS_KEY, false);\n    this.storeThemeColors(THEME_COLOR_KEY, 0);\n   \n  }\n  registerForPushNotifications = async () => {\n    console.log('notifications')\n    var tokens=[]\n    fire.database().ref('tokens/').once('value', function (snapshot) {\n      console.log(snapshot)\n     \n      \n     snapshot.forEach((child=>{\n      const a = (child.val().tok);\n      tokens.push(a)\n      console.log(tokens)\n     })\n    )\n    })\n  \n\n\n    const { status: existingStatus } = await Permissions.getAsync(\n      Permissions.NOTIFICATIONS\n    );\n    let finalStatus = existingStatus;\n\n    \n    if (existingStatus !== 'granted') {\n      \n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status;\n    }\n\n    // Stop here if the user did not grant permissions\n    if (finalStatus !== 'granted') {\n      return;\n    }\n\n  \n      // Get the token that uniquely identifi \n      try{\n      let token =await Notifications.getExpoPushTokenAsync();\n\n      console.log(\"hello\")\n      console.log(token);\n      let found = false;\n      tokens.forEach(t=>{\n        if(t==token){\n          console.log('Token Found');\n          found = true;\n        }\n      });\n\n      if(found==false){\n        console.log('Sending New Token');\n\n        const num  = Math.floor((Math.random()*100)+1).toString()\n\n        this.setState({num})\n        \n        fire.database().ref('scholarship/').child(num).set({\n          tok:token\n        });\n      }\n       \n\n      }\n      catch(e){\n          console.log(\"error\"+e)\n      }\n\n    }\n\n    unRegisterForPushnNotification= async ()=>{\n      \n              const rem = this.state.num    \n              let reference = fire.database().ref('scholarship/'+rem);\n              reference.remove();\n              console.log('done')\n            \n       \n\n        \n        }\n        readUserData=async()=> {\n          console.log('helloooooooooooooooooo')\n          fire.database().ref('tokens/').once('value', function (snapshot) {\n              // console.log(snapshot.val())\n              var tasks = [];;\n             snapshot.forEach((child=>{\n              const a = (child.val().tok);\n              \n            \n              let response = fetch('https://exp.host/--/api/v2/push/send', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                  to:a,\n                  sound:'default',\n                  title:'aur sunao',\n                  body:'mai thek tm btao!'\n                \n              }),\n            });\n               \n                \n             }))\n          \n              \n          });\n      }\n      \n    \n  render() {\n\n\n\n\n    \n    \n\n \n\n    console.disableYellowBox = true;\n    return (\n        \n      <View style={styles.container}>\n     \n        <Card containerStyle={styles.card} title='Notifications' >\n          <View style={styles.row}>\n            <Text style={{ fontSize: 16 }}>Show Notifications</Text>\n            <Switch\n              style={{ marginLeft: 16 }}\n              trackColor='red'\n              thumbColor='white'\n              value={this.state.showNotifications}\n              onValueChange={(showNotifications) => {\n                this.storeNotification(SHOW_NOTIFICATIONS_KEY, showNotifications);\n                \n              }}\n              // onValueChange={this.registerForPushNotifications()}\n            />\n          </View>\n        </Card>\n \n       \n    \n        <Button\n          containerStyle={styles.restoreButtonContainer}\n          buttonStyle={{\n            padding: 16,\n            backgroundColor:'red'\n          }}\n          onPress={this.readUserData}\n          title=\"Send Notification\"\n        />\n       \n    \n      </View>\n    );\n  }\n \n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderColor: 'black',\n    //alignItems: 'center',\n    height: '100%',\n    backgroundColor: '#D0D3D4',\n    marginTop:40,\n    flex:1\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonGroup: {\n    height: 60,\n    width: 300\n  },\n  buttonGroupText: {\n    fontSize: 18,\n    color: 'white'\n  },\n  slider: {\n    width: 250,\n    marginLeft: 16\n  },\n  card: {\n    alignItems: 'center',\n    backgroundColor: '#EAECEE',\n    borderColor: '#ABB2B9',\n    borderWidth: 0.3,\n    width: '90%',\n  },\n  restoreButtonContainer: {\n    margin: 32\n  }\n});"]},"metadata":{},"sourceType":"module"}